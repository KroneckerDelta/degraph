apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'github-pages'

apply plugin: 'versions'

buildscript {
    repositories {
        maven { url "https://github.com/ben-manes/gradle-versions-plugin/raw/mvnrepo" }
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5-beta-5'
    }
}

try{ // fails when there is no network available
    apply from: 'http://tellurianring.com/projects/gradle-plugins/gradle-release/1.1/apply.groovy'
	
    task pushToBintray(type:Exec) {
      commandLine 'curl', '-T', 'build/distributions/degraph-' + version + '.zip', '-uschauder:' + bintrayApikey ,'https://api.bintray.com/content/schauder/schauderhaft-de/Degraph/' + version + '/degraph-'+ version + '.zip'
    }
    
    pushToBintray.dependsOn distZip
    
    createReleaseTag.dependsOn pushToBintray
    
    githubPages {
      repoUri = 'https://github.com/schauder/degraph.git'
      credentials {
        username = System.properties['credentials.username']
    	password = System.properties['credentials.password']
      }  
    }
	
} catch (RuntimeException re){
    System.out.println("releasing not possible (probably no network)")
	re.printStackTrace()
}
description= 'Degraph is a library for producing dependency graphs for visual inspection'

targetCompatibility = 1.7
sourceCompatibility = 1.7

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
}

mainClassName = 'de.schauderhaft.degraph.Degraph'
applicationDistribution.from(['license.txt','readme.markdown', 'releaseNotes.md']) {
    into "/"
}
applicationDistribution.from('src/demo/resource'){
    into "/example/"
}
applicationDistribution.from('build/docs'){
    into "/docs"
}

distZip.dependsOn scaladoc


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.nisgits.gradle:gradle-executable-jar-plugin:1.7.0' // executable jar plugin
	}
	
	dependencies { classpath 'org.ajoberstar:gradle-git:0.8.0' } // github-pages plugin
}

repositories {
    mavenCentral()
}


dependencies {
    // Libraries needed for scala api
    compile 'org.scala-lang:scala-library:2.10.3'

	compile 'org.ow2.asm:asm:5.0.3'

	compile 'log4j:log4j:1.2.17'
	compile 'org.rogach:scallop_2.10:0.9.5'

    compile 'com.assembla.scala-incubator:graph-core_2.10:1.9.0'

	compile 'org.scalatest:scalatest_2.10:2.2.0-RC2'
    compile 'org.hamcrest:hamcrest-all:1.3'

    testCompile 'junit:junit:4.11'
}
