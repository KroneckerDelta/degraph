buildscript {
    repositories {
        maven { url "https://github.com/ben-manes/gradle-versions-plugin/raw/mvnrepo" }
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5-beta-5'
        classpath 'net.nisgits.gradle:gradle-executable-jar-plugin:1.7.0' // executable jar plugin
    }
}


    try { // fails when there is no network available
        apply from: 'http://tellurianring.com/projects/gradle-plugins/gradle-release/1.1/apply.groovy'

        createReleaseTag.dependsOn(':degraph:pushToBintray')
        createReleaseTag.dependsOn(':core:pushToBintray')
        createReleaseTag.dependsOn(':check:pushToBintray')

    } catch (RuntimeException re) {
        System.out.println("releasing not possible (probably no network)")
        re.printStackTrace()
    }


allprojects {
    apply plugin: 'scala'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'versions'


    group = "de.schauderhaft.degraph"

    task wrapper(type: Wrapper) {
        gradleVersion = '1.12'
    }
}

subprojects {

    targetCompatibility = 1.7
    sourceCompatibility = 1.7

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.useAnt = false
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.11'
        testCompile 'org.scalatest:scalatest_2.10:2.2.0'
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from scaladoc
    }
    javadocJar.dependsOn scaladoc

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        sign configurations.archives
    }
}

project('core') {

    description = 'Degraph is a library for producing jvm package dependency graphs for visual inspection ' +
            'as well as writing tests for checking properties of the dependencies. The core module makes up' +
            ' the main logic of Degraph independent of any UI.'

    archivesBaseName = "degraph-core"

    task pushToBintray(type: Exec) {
        commandLine 'curl', '-T', 'build/libs/' + project.name + '-' + version + '.jar', '-uschauder:' + bintrayApikey, 'https://api.bintray.com/content/schauder/schauderhaft-de/Degraph/' + version + '/degraph-' + project.name + '-' + version + '.jar'
    }
    pushToBintray.dependsOn("install")

    dependencies {
        compile 'org.scala-lang:scala-library:2.10.4'

        compile 'org.ow2.asm:asm:5.0.3'

        compile 'com.assembla.scala-incubator:graph-core_2.10:1.9.0'
    }
}

project('check') {

    description = 'Degraph is a library for producing jvm package dependency graphs for visual inspection ' +
            'as well as writing tests for checking properties of the dependencies.' +
            ' The check module allows to write unit tests using scalatest, or junit'

    archivesBaseName = "degraph-check"

    task pushToBintray(type: Exec) {
        commandLine 'curl', '-T', 'build/libs/' + project.name + '-' + version + '.jar', '-uschauder:' + bintrayApikey, 'https://api.bintray.com/content/schauder/schauderhaft-de/Degraph/' + version + '/degraph-' + project.name + '-' + version + '.jar'
    }
    pushToBintray.dependsOn("install")

    dependencies {
        compile project(':core')
        compile 'org.scalatest:scalatest_2.10:2.2.0'
        compile 'org.hamcrest:hamcrest-all:1.3'
    }
}

project('degraph') {
    apply plugin: 'application'

    description = 'Degraph is a library for producing jvm package dependency graphs for visual inspection ' +
            'as well as writing tests for checking properties of the dependencies.' +
    ' The depgraph module is a command line application for creating dependency graphs.'

    mainClassName = 'de.schauderhaft.degraph.app.Degraph'
    applicationDistribution.from(['license.txt', 'readme.markdown', 'releaseNotes.md']) {
        into "/"
    }
    applicationDistribution.from('src/demo/resource') {
        into "/example/"
    }

    task pushToBintray(type: Exec) {
        commandLine 'curl', '-T', 'build/distributions/' + project.name + '-' + version + '.zip', '-uschauder:' + bintrayApikey, 'https://api.bintray.com/content/schauder/schauderhaft-de/Degraph/' + version + '/' + project.name + '-' + version + '.zip'
    }
    pushToBintray.dependsOn("distZip")

    distZip.dependsOn scaladoc


    dependencies {
        compile project(':core')
        compile 'org.rogach:scallop_2.10:0.9.5'
        compile 'org.rogach:scallop_2.10:0.9.5'

    }
}
